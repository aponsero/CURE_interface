naC_Q7 <- na_Q7 %>% mutate(percent_na=nb_na/nrow(Q7)) %>%
add_column(questionnaire="MotherDepression") %>% select(questionnaire, percent_na)
all_nac <- bind_rows(all_nac, naC_Q7)
na_Q8 <-sapply(Q8, function(y) sum(length(which(is.na(y)))))
na_Q8 <- data.frame(na_Q8) %>% rename("nb_na"="na_Q8")
naC_Q8 <- na_Q8 %>% mutate(percent_na=nb_na/nrow(Q8)) %>%
add_column(questionnaire="HouseCollection") %>% select(questionnaire, percent_na)
all_nac <- bind_rows(all_nac, naC_Q8)
na_Q9 <-sapply(Q9, function(y) sum(length(which(is.na(y)))))
na_Q9 <- data.frame(na_Q9) %>% rename("nb_na"="na_Q9")
naC_Q9 <- na_Q9 %>% mutate(percent_na=nb_na/nrow(Q9)) %>%
add_column(questionnaire="0to3months") %>% select(questionnaire, percent_na)
all_nac <- bind_rows(all_nac, naC_Q9)
# Boxplot Na percentages
all_nac$questionnaire <- as.factor(all_nac$questionnaire)
#violin_plot<- all_nac %>% ggplot(aes(x=questionnaire, y=percent_na, fill=questionnaire)) +
#    geom_violin() +
#    theme(
#      legend.position="none",
#      plot.title = element_text(size=11)
#    ) +
#    xlab("") + coord_flip()
#violin_plot
ridge_plot <- all_nac %>% ggplot(aes(x=percent_na, y=questionnaire, fill=questionnaire))+
geom_density_ridges() +
theme_ridges() +
theme(legend.position = "none")
ridge_plot
# nb of famillies answers in each questionnaires
Q1_fam <- Q1 %>% group_by(questionnaire, familly_ID) %>% tally() %>% ungroup()
Q2_fam <- Q2 %>% group_by(questionnaire, familly_ID) %>% tally() %>% ungroup()
Q3_fam <- Q3 %>% group_by(questionnaire, familly_ID) %>% tally() %>% ungroup()
Q4_fam <- Q4 %>% group_by(questionnaire, familly_ID) %>% tally() %>% ungroup()
Q5y1_fam <- Q5y1 %>% group_by(questionnaire, familly_ID) %>% tally() %>% ungroup()
Q5y2_fam <- Q5y2 %>% group_by(questionnaire, familly_ID) %>% tally() %>% ungroup()
Q5y1B_fam <- Q5y1B %>% group_by(questionnaire, familly_ID) %>% tally() %>% ungroup()
Q5y2B_fam <- Q5y2B %>% group_by(questionnaire, familly_ID) %>% tally() %>% ungroup()
Q6F_fam <- Q6F %>% group_by(questionnaire, familly_ID) %>% tally() %>% ungroup()
Q6M_fam <- Q6M %>% group_by(questionnaire, familly_ID) %>% tally() %>% ungroup()
Q7_fam <- Q7 %>% group_by(questionnaire, familly_ID) %>% tally() %>% ungroup()
Q8_fam <- Q8 %>% group_by(questionnaire, familly_ID) %>% tally() %>% ungroup()
Q9_fam <- Q9 %>% group_by(questionnaire, familly_ID) %>% tally() %>% ungroup()
all_fam <- Q1_fam %>% add_row(Q2_fam) %>%
add_row(Q3_fam) %>%
add_row(Q4_fam) %>%
add_row(Q5y1_fam) %>%
add_row(Q5y2_fam) %>%
add_row(Q5y1B_fam) %>%
add_row(Q5y2B_fam) %>%
add_row(Q6F_fam) %>%
add_row(Q6M_fam) %>%
add_row(Q7_fam) %>%
add_row(Q8_fam) %>%
add_row(Q9_fam) %>% rename("nb_filled"="n")
nb_fam <- all_fam %>% select(questionnaire, familly_ID) %>% unique() %>%
group_by(questionnaire) %>% tally() %>% ungroup() %>% rename("nb of famillies"="n")
knitr::kable(nb_fam, caption = 'number of famillies answering the questionnaire at least once')
plot_comp <- all_fam %>% group_by(questionnaire, nb_filled) %>% tally() %>% rename("nb_famillies"="n") %>%
ungroup()
plot_comp$nb_filled = as.factor(plot_comp$nb_filled )
plotComp <- plot_comp %>% ggplot(aes(x=questionnaire, y=nb_famillies, fill=nb_filled)) +
geom_bar(stat="identity")+
coord_flip() +
scale_fill_discrete(name = "Number of questionnaires answered") +
theme(legend.position="bottom",
text = element_text(size=10))
plotComp
# looking at the number of families filling the regular questionnaires
all_fam_wide <- all_fam %>% pivot_wider(names_from=questionnaire, values_from=nb_filled) %>% replace(is.na(.), 0) %>%
mutate(F1_NutritionMotor_year1=F1_NutritionMotorDev_year1_Version2+F1_NutritionMotorDev_year1_Version1)%>%
mutate(F1_NutritionMotor_year2=F2_NutritionMotorDev_year2_Version2+F2_NutritionMotorDev_year2_Version1)
#infants questionnaires (background, Nutrition/Motor year 1 and 2)
all_fam_wide <- all_fam_wide %>% mutate(all_inf=A_background+F1_NutritionMotor_year1+F1_NutritionMotor_year2)
#infants frequency questionnaires: (E_Previous3Months, C_4to6months, D_7to12months, B_0to3months)
all_fam_wide <- all_fam_wide %>% mutate(all_reg=E_Previous3Months+C_4to6months+
D_7to12months+B_0to3months)
#parents questionnaires: (G_ParentF_FoodFrequency, G_ParentM_FoodFrequency, G_MotherDepression, G_MotherStress (in progress))
all_fam_wide <- all_fam_wide %>% mutate(all_parents=G_ParentF_FoodFrequency+G_ParentM_FoodFrequency+
G_MotherDepression)
# all main questionnaires
all_fam_wide <- all_fam_wide %>% mutate(all_main=all_inf+all_reg+all_parents)
write.csv(all_fam_wide, "per_familly_questionnaires.csv")
## output table
max_inf <- all_fam_wide %>% filter(all_inf==3) %>% tally() %>%
rename("all infants"="n")
max_reg <- all_fam_wide %>% filter(all_reg==38) %>% tally()%>%
rename("all infants frequency"="n")
max_parents <- all_fam_wide %>% filter(all_parents==5) %>% tally()%>%
rename("all parents"="n")
View(max_parents)
# looking at the number of families filling the regular questionnaires
all_fam_wide <- all_fam %>% pivot_wider(names_from=questionnaire, values_from=nb_filled) %>% replace(is.na(.), 0) %>%
mutate(F1_NutritionMotor_year1=F1_NutritionMotorDev_year1_Version2+F1_NutritionMotorDev_year1_Version1)%>%
mutate(F1_NutritionMotor_year2=F2_NutritionMotorDev_year2_Version2+F2_NutritionMotorDev_year2_Version1)
#infants questionnaires (background, Nutrition/Motor year 1 and 2)
all_fam_wide <- all_fam_wide %>% mutate(all_inf=A_background+F1_NutritionMotor_year1+F1_NutritionMotor_year2)
#infants frequency questionnaires: (E_Previous3Months, C_4to6months, D_7to12months, B_0to3months)
all_fam_wide <- all_fam_wide %>% mutate(all_reg=E_Previous3Months+C_4to6months+
D_7to12months+B_0to3months)
#parents questionnaires: (G_ParentF_FoodFrequency, G_ParentM_FoodFrequency, G_MotherDepression, G_MotherStress (in progress))
all_fam_wide <- all_fam_wide %>% mutate(all_parents=G_ParentF_FoodFrequency+G_ParentM_FoodFrequency+
G_MotherDepression)
# all main questionnaires
all_fam_wide <- all_fam_wide %>% mutate(all_main=all_inf+all_reg+all_parents)
write.csv(all_fam_wide, "per_familly_questionnaires.csv")
## output table
max_inf <- all_fam_wide %>% filter(all_inf==3) %>% tally() %>%
rename("all infants"="n")
max_reg <- all_fam_wide %>% filter(all_reg==38) %>% tally()%>%
rename("all infants frequency"="n")
max_parents <- all_fam_wide %>% filter(all_parents==5) %>% tally()%>%
rename("all parents"="n")
max_all <- all_fam_wide %>% filter(all_main==46) %>% tally()%>%
rename("all major questionnaires"="n")
max_infreg <- all_fam_wide %>% filter(all_reg==38 & all_inf==3) %>% tally()%>%
rename("all major infants and frequency"="n")
most_infreg <- all_fam_wide %>% filter(all_reg>=35 & all_inf==3) %>% tally()%>%
rename("all major infants and most frequency"="n")
table_out <- max_inf %>% add_column(max_reg) %>%
add_column(max_reg) %>%
add_column(max_parents) %>%
add_column(max_all) %>%
add_column(max_infreg) %>%
add_column(most_infreg)
# looking at the number of families filling the regular questionnaires
all_fam_wide <- all_fam %>% pivot_wider(names_from=questionnaire, values_from=nb_filled) %>% replace(is.na(.), 0) %>%
mutate(F1_NutritionMotor_year1=F1_NutritionMotorDev_year1_Version2+F1_NutritionMotorDev_year1_Version1)%>%
mutate(F1_NutritionMotor_year2=F2_NutritionMotorDev_year2_Version2+F2_NutritionMotorDev_year2_Version1)
#infants questionnaires (background, Nutrition/Motor year 1 and 2)
all_fam_wide <- all_fam_wide %>% mutate(all_inf=A_background+F1_NutritionMotor_year1+F1_NutritionMotor_year2)
#infants frequency questionnaires: (E_Previous3Months, C_4to6months, D_7to12months, B_0to3months)
all_fam_wide <- all_fam_wide %>% mutate(all_reg=E_Previous3Months+C_4to6months+
D_7to12months+B_0to3months)
#parents questionnaires: (G_ParentF_FoodFrequency, G_ParentM_FoodFrequency, G_MotherDepression, G_MotherStress (in progress))
all_fam_wide <- all_fam_wide %>% mutate(all_parents=G_ParentF_FoodFrequency+G_ParentM_FoodFrequency+
G_MotherDepression)
# all main questionnaires
all_fam_wide <- all_fam_wide %>% mutate(all_main=all_inf+all_reg+all_parents)
write.csv(all_fam_wide, "per_familly_questionnaires.csv")
## output table
max_inf <- all_fam_wide %>% filter(all_inf==3) %>% tally() %>%
rename("all infants"="n")
max_reg <- all_fam_wide %>% filter(all_reg==38) %>% tally()%>%
rename("all infants frequency"="n")
max_parents <- all_fam_wide %>% filter(all_parents==5) %>% tally()%>%
rename("all parents"="n")
max_all <- all_fam_wide %>% filter(all_main==46) %>% tally()%>%
rename("all major questionnaires"="n")
max_infreg <- all_fam_wide %>% filter(all_reg==38 & all_inf==3) %>% tally()%>%
rename("all major infants and frequency"="n")
most_infreg <- all_fam_wide %>% filter(all_reg>=35 & all_inf==3) %>% tally()%>%
rename("all major infants and most frequency"="n")
table_out <- max_inf %>% add_column(max_reg) %>%
add_column(max_parents) %>%
add_column(max_all) %>%
add_column(max_infreg) %>%
add_column(most_infreg)
View(table_out)
?pivot_longer()
# looking at the number of families filling the regular questionnaires
all_fam_wide <- all_fam %>% pivot_wider(names_from=questionnaire, values_from=nb_filled) %>% replace(is.na(.), 0) %>%
mutate(F1_NutritionMotor_year1=F1_NutritionMotorDev_year1_Version2+F1_NutritionMotorDev_year1_Version1)%>%
mutate(F1_NutritionMotor_year2=F2_NutritionMotorDev_year2_Version2+F2_NutritionMotorDev_year2_Version1)
#infants questionnaires (background, Nutrition/Motor year 1 and 2)
all_fam_wide <- all_fam_wide %>% mutate(all_inf=A_background+F1_NutritionMotor_year1+F1_NutritionMotor_year2)
#infants frequency questionnaires: (E_Previous3Months, C_4to6months, D_7to12months, B_0to3months)
all_fam_wide <- all_fam_wide %>% mutate(all_reg=E_Previous3Months+C_4to6months+
D_7to12months+B_0to3months)
#parents questionnaires: (G_ParentF_FoodFrequency, G_ParentM_FoodFrequency, G_MotherDepression, G_MotherStress (in progress))
all_fam_wide <- all_fam_wide %>% mutate(all_parents=G_ParentF_FoodFrequency+G_ParentM_FoodFrequency+
G_MotherDepression)
# all main questionnaires
all_fam_wide <- all_fam_wide %>% mutate(all_main=all_inf+all_reg+all_parents)
write.csv(all_fam_wide, "per_familly_questionnaires.csv")
## output table
max_inf <- all_fam_wide %>% filter(all_inf==3) %>% tally() %>%
rename("all infants"="n")
max_reg <- all_fam_wide %>% filter(all_reg==38) %>% tally()%>%
rename("all infants frequency"="n")
max_parents <- all_fam_wide %>% filter(all_parents==5) %>% tally()%>%
rename("all parents"="n")
max_all <- all_fam_wide %>% filter(all_main==46) %>% tally()%>%
rename("all major questionnaires"="n")
max_infreg <- all_fam_wide %>% filter(all_reg==38 & all_inf==3) %>% tally()%>%
rename("all major infants and frequency"="n")
most_infreg <- all_fam_wide %>% filter(all_reg>=35 & all_inf==3) %>% tally()%>%
rename("all major infants and most frequency"="n")
table_out <- max_inf %>% add_column(max_reg) %>%
add_column(max_parents) %>%
add_column(max_all) %>%
add_column(max_infreg) %>%
add_column(most_infreg) %>%
pivot_longer()
# looking at the number of families filling the regular questionnaires
all_fam_wide <- all_fam %>% pivot_wider(names_from=questionnaire, values_from=nb_filled) %>% replace(is.na(.), 0) %>%
mutate(F1_NutritionMotor_year1=F1_NutritionMotorDev_year1_Version2+F1_NutritionMotorDev_year1_Version1)%>%
mutate(F1_NutritionMotor_year2=F2_NutritionMotorDev_year2_Version2+F2_NutritionMotorDev_year2_Version1)
#infants questionnaires (background, Nutrition/Motor year 1 and 2)
all_fam_wide <- all_fam_wide %>% mutate(all_inf=A_background+F1_NutritionMotor_year1+F1_NutritionMotor_year2)
#infants frequency questionnaires: (E_Previous3Months, C_4to6months, D_7to12months, B_0to3months)
all_fam_wide <- all_fam_wide %>% mutate(all_reg=E_Previous3Months+C_4to6months+
D_7to12months+B_0to3months)
#parents questionnaires: (G_ParentF_FoodFrequency, G_ParentM_FoodFrequency, G_MotherDepression, G_MotherStress (in progress))
all_fam_wide <- all_fam_wide %>% mutate(all_parents=G_ParentF_FoodFrequency+G_ParentM_FoodFrequency+
G_MotherDepression)
# all main questionnaires
all_fam_wide <- all_fam_wide %>% mutate(all_main=all_inf+all_reg+all_parents)
write.csv(all_fam_wide, "per_familly_questionnaires.csv")
## output table
max_inf <- all_fam_wide %>% filter(all_inf==3) %>% tally() %>%
rename("all infants"="n")
max_reg <- all_fam_wide %>% filter(all_reg==38) %>% tally()%>%
rename("all infants frequency"="n")
max_parents <- all_fam_wide %>% filter(all_parents==5) %>% tally()%>%
rename("all parents"="n")
max_all <- all_fam_wide %>% filter(all_main==46) %>% tally()%>%
rename("all major questionnaires"="n")
max_infreg <- all_fam_wide %>% filter(all_reg==38 & all_inf==3) %>% tally()%>%
rename("all major infants and frequency"="n")
most_infreg <- all_fam_wide %>% filter(all_reg>=35 & all_inf==3) %>% tally()%>%
rename("all major infants and most frequency"="n")
table_out <- max_inf %>% add_column(max_reg) %>%
add_column(max_parents) %>%
add_column(max_all) %>%
add_column(max_infreg) %>%
add_column(most_infreg) %>%
mutate(name="nb families") %>%
pivot_longer(names_to = name)
table_out <- max_inf %>% add_column(max_reg) %>%
add_column(max_parents) %>%
add_column(max_all) %>%
add_column(max_infreg) %>%
add_column(most_infreg) %>%
pivot_longer(names_to="measures", values_to="nb families")
table_out <- max_inf %>% add_column(max_reg) %>%
add_column(max_parents) %>%
add_column(max_all) %>%
add_column(max_infreg) %>%
add_column(most_infreg) %>%
pivot_longer(everything(), names_to="measures", values_to="nb families")
View(table_out)
# looking at the number of families filling the regular questionnaires
all_fam_wide <- all_fam %>% pivot_wider(names_from=questionnaire, values_from=nb_filled) %>% replace(is.na(.), 0) %>%
mutate(F1_NutritionMotor_year1=F1_NutritionMotorDev_year1_Version2+F1_NutritionMotorDev_year1_Version1)%>%
mutate(F1_NutritionMotor_year2=F2_NutritionMotorDev_year2_Version2+F2_NutritionMotorDev_year2_Version1)
#infants questionnaires (background, Nutrition/Motor year 1 and 2)
all_fam_wide <- all_fam_wide %>% mutate(all_inf=A_background+F1_NutritionMotor_year1+F1_NutritionMotor_year2)
#infants frequency questionnaires: (E_Previous3Months, C_4to6months, D_7to12months, B_0to3months)
all_fam_wide <- all_fam_wide %>% mutate(all_reg=E_Previous3Months+C_4to6months+
D_7to12months+B_0to3months)
#parents questionnaires: (G_ParentF_FoodFrequency, G_ParentM_FoodFrequency, G_MotherDepression, G_MotherStress (in progress))
all_fam_wide <- all_fam_wide %>% mutate(all_parents=G_ParentF_FoodFrequency+G_ParentM_FoodFrequency+
G_MotherDepression)
# all main questionnaires
all_fam_wide <- all_fam_wide %>% mutate(all_main=all_inf+all_reg+all_parents)
write.csv(all_fam_wide, "per_familly_questionnaires.csv")
## output table
max_inf <- all_fam_wide %>% filter(all_inf==3) %>% tally() %>%
rename("all infants"="n")
max_reg <- all_fam_wide %>% filter(all_reg==38) %>% tally()%>%
rename("all infants frequency"="n")
max_parents <- all_fam_wide %>% filter(all_parents==5) %>% tally()%>%
rename("all parents"="n")
max_all <- all_fam_wide %>% filter(all_main==46) %>% tally()%>%
rename("all major questionnaires"="n")
max_infreg <- all_fam_wide %>% filter(all_reg==38 & all_inf==3) %>% tally()%>%
rename("all major infants and frequency"="n")
most_infreg <- all_fam_wide %>% filter(all_reg>=35 & all_inf==3) %>% tally()%>%
rename("all major infants and most frequency"="n")
table_out <- max_inf %>% add_column(max_reg) %>%
add_column(max_parents) %>%
add_column(max_all) %>%
add_column(max_infreg) %>%
add_column(most_infreg) %>%
pivot_longer(everything(), names_to="measures", values_to="nb families")
knitr::kable(table_out)
# libraries
library("readxl")
library("tidyverse")
library("ggridges")
# Load the spreadsheets
Voc <- read_excel("../questionnaire_vocabulary.xlsx")
Q1 <- read_csv("../normalized_versions/corrected_translated/Q1_norm_background_04.10.18.csv") %>%
add_column(questionnaire="A_background")
Q2 <- read_csv("../normalized_versions/corrected_translated/Q2_norm_Previous3months_15.08.20.csv") %>%
add_column(questionnaire="E_Previous3Months")
Q3 <- read_csv("../normalized_versions/corrected_translated/Q3_norm_4to6months_26.01.20.csv") %>%
add_column(questionnaire="C_4to6months")
Q4 <- read_csv("../normalized_versions/corrected_translated/Q4_norm_7to12months_27.01.21.csv") %>%
add_column(questionnaire="D_7to12months")
Q5y1 <- read_csv("../normalized_versions/corrected_translated/Q5_norm_NutritionMotorDev_v2_yearI_28.01.21.csv") %>%
add_column(questionnaire="F1_NutritionMotorDev_year1_Version2")
Q5y2 <- read_csv("../normalized_versions/corrected_translated/Q5_norm_NutritionMotorDev_v2_yearII_28.01.21.csv") %>%
add_column(questionnaire="F2_NutritionMotorDev_year2_Version2")
Q5y1B <- read_csv("../normalized_versions/corrected_translated/Q5_norm_NutritionMotorDev_yearI_27.01.21.csv") %>%
add_column(questionnaire="F1_NutritionMotorDev_year1_Version1")
Q5y2B <- read_csv("../normalized_versions/corrected_translated/Q5_norm_NutritionMotorDev_yearII_28.01.21.csv") %>%
add_column(questionnaire="F2_NutritionMotorDev_year2_Version1")
Q6F <- read_csv("../normalized_versions/corrected_translated/Q6_norm_ParentsF_FoodFrequency_28.01.21.csv") %>%
add_column(questionnaire="G_ParentF_FoodFrequency")
Q6M <- read_csv("../normalized_versions/corrected_translated/Q6_norm_ParentsM_FoodFrequency_28.01.21.csv") %>%
add_column(questionnaire="G_ParentM_FoodFrequency")
Q7 <- read_csv("../normalized_versions/corrected_translated/Q7_norm_depression_unkown.csv") %>%
add_column(questionnaire="G_MotherDepression")
Q8 <- read_csv("../normalized_versions/corrected_translated/Q8_norm_HouseDustCollection_28.01.21.csv") %>%
add_column(questionnaire="H_HouseCollection")
Q9 <- read_csv("../normalized_versions/corrected_translated/Q9_norm_0to3 months_02.02.2020.csv") %>%
add_column(questionnaire="B_0to3months")
curr_Voc <- Voc %>% filter(Questionnaire=="F2_NutritionMotorDev_yearII_Version1")
# Looking at boolean fields
bool_fields <- curr_Voc %>% filter(data_type=="bool") %>% pull(variable_short_name)
curr_bool <- Q5y1B %>% select(familly_ID, all_of(bool_fields))
curr_bool_long <- curr_bool %>% pivot_longer(!familly_ID, names_to="question", values_to="answers")
curr_bool_counts <- curr_bool_long %>% group_by(question, answers) %>% tally()
plotbools <- curr_bool_counts %>% ggplot(aes(x=question, y=n, fill=answers)) +
geom_bar(stat="identity")+
coord_flip() +
theme(legend.position="bottom",
text = element_text(size=10))
plotbools
curr_Voc <- Voc %>% filter(Questionnaire=="F2_NutritionMotorDev_yearII_Version1")
# Looking at boolean fields
cat_fields <- curr_Voc %>% filter(data_type=="categorical") %>%
pull(variable_short_name)
curr_cat <- Q5y1B %>% select(familly_ID, all_of(cat_fields)) %>% mutate_all(as.character)
curr_cat_long <- curr_cat %>% pivot_longer(!familly_ID, names_to="question", values_to="answers")
curr_cat_counts <- curr_cat_long %>% group_by(question, answers) %>% tally()
# categories from 1 to 10
plotcat <- curr_cat_counts %>% ggplot(aes(x=question, y=n, fill=answers)) +
geom_bar(stat="identity")+
coord_flip() +
theme(legend.position="bottom",
text = element_text(size=10))
plotcat
curr_Voc <- Voc %>% filter(Questionnaire=="F2_NutritionMotorDev_yearII_Version1")
# Looking at boolean fields
bool_fields <- curr_Voc %>% filter(data_type=="bool") %>% pull(variable_short_name)
curr_bool <- Q5y2B %>% select(familly_ID, all_of(bool_fields))
curr_bool_long <- curr_bool %>% pivot_longer(!familly_ID, names_to="question", values_to="answers")
curr_bool_counts <- curr_bool_long %>% group_by(question, answers) %>% tally()
plotbools <- curr_bool_counts %>% ggplot(aes(x=question, y=n, fill=answers)) +
geom_bar(stat="identity")+
coord_flip() +
theme(legend.position="bottom",
text = element_text(size=10))
plotbools
View(Q5y2B)
View(curr_bool)
View(curr_bool)
curr_Voc <- Voc %>% filter(Questionnaire=="F2_NutritionMotorDev_yearII_Version1")
# Looking at boolean fields
bool_fields <- curr_Voc %>% filter(data_type=="bool") %>% pull(variable_short_name)
curr_bool <- Q5y2B %>% select(familly_ID, all_of(bool_fields))
curr_bool_long <- curr_bool %>% pivot_longer(!familly_ID, names_to="question", values_to="answers")
curr_bool_counts <- curr_bool_long %>% group_by(question, answers) %>% tally()
curr_Voc <- Voc %>% filter(Questionnaire=="F2_NutritionMotorDev_yearII_Version1")
# Looking at boolean fields
cat_fields <- curr_Voc %>% filter(data_type=="categorical") %>%
pull(variable_short_name)
curr_cat <- Q5y2B %>% select(familly_ID, all_of(cat_fields)) %>% mutate_all(as.character)
curr_cat_long <- curr_cat %>% pivot_longer(!familly_ID, names_to="question", values_to="answers")
curr_cat_counts <- curr_cat_long %>% group_by(question, answers) %>% tally()
# categories from 1 to 10
plotcat <- curr_cat_counts %>% ggplot(aes(x=question, y=n, fill=answers)) +
geom_bar(stat="identity")+
coord_flip() +
theme(legend.position="bottom",
text = element_text(size=10))
plotcat
curr_Voc <- Voc %>% filter(Questionnaire=="F2_NutritionMotorDev_yearII_Version1")
# Looking at int fields
int_fields <- curr_Voc %>% filter(data_type=="int") %>%
filter(variable_short_name != "inf_Age") %>%
filter(variable_short_name != "inf_AgeDays") %>%
filter(variable_short_name != "inf_AgeWeeks") %>%
filter(usability!="EMPTY") %>%
pull(variable_short_name)
curr_int <- Q5y2B %>% select(all_of(int_fields)) %>%
mutate_if(is.character,as.numeric)
ggplot(gather(curr_int), aes(value)) +
geom_histogram() +
facet_wrap(~key, scales = 'free')
# checking type of data
type_check <-  curr_int %>%
dplyr::summarise_all(class) %>%
tidyr::gather(variable, class)
curr_Voc <- Voc %>% filter(Questionnaire=="F1_NutritionMotorDev_yearI_Version2")
# Looking at boolean fields
bool_fields <- curr_Voc %>% filter(data_type=="bool") %>% pull(variable_short_name)
curr_bool <- Q5y1 %>% select(familly_ID, all_of(bool_fields))
curr_bool_long <- curr_bool %>% pivot_longer(!familly_ID, names_to="question", values_to="answers")
curr_bool_counts <- curr_bool_long %>% group_by(question, answers) %>% tally()
plotbools <- curr_bool_counts %>% ggplot(aes(x=question, y=n, fill=answers)) +
geom_bar(stat="identity")+
coord_flip() +
theme(legend.position="bottom",
text = element_text(size=10))
plotbools
curr_Voc <- Voc %>% filter(Questionnaire=="F1_NutritionMotorDev_yearI_Version2")
# Looking at boolean fields
cat_fields <- curr_Voc %>% filter(data_type=="categorical") %>%
pull(variable_short_name)
curr_cat <- Q5y1 %>% select(familly_ID, all_of(cat_fields)) %>% mutate_all(as.character)
curr_cat_long <- curr_cat %>% pivot_longer(!familly_ID, names_to="question", values_to="answers")
curr_cat_counts <- curr_cat_long %>% group_by(question, answers) %>% tally()
# categories from 1 to 10
plotcat <- curr_cat_counts %>% ggplot(aes(x=question, y=n, fill=answers)) +
geom_bar(stat="identity")+
coord_flip() +
theme(legend.position="bottom",
text = element_text(size=10))
plotcat
View(curr_cat)
curr_Voc <- Voc %>% filter(Questionnaire=="F1_NutritionMotorDev_yearI_Version2")
# Looking at boolean fields
cat_fields <- curr_Voc %>% filter(data_type=="categorical") %>% filter(variable_short_name!="inf_PeriodFormula") %>%
pull(variable_short_name)
curr_cat <- Q5y1 %>% select(familly_ID, all_of(cat_fields)) %>% mutate_all(as.character)
curr_cat_long <- curr_cat %>% pivot_longer(!familly_ID, names_to="question", values_to="answers")
curr_cat_counts <- curr_cat_long %>% group_by(question, answers) %>% tally()
# categories from 1 to 10
plotcat <- curr_cat_counts %>% ggplot(aes(x=question, y=n, fill=answers)) +
geom_bar(stat="identity")+
coord_flip() +
theme(legend.position="bottom",
text = element_text(size=10))
plotcat
curr_Voc <- Voc %>% filter(Questionnaire=="F1_NutritionMotorDev_yearI_Version2")
# Looking at int fields
int_fields <- curr_Voc %>% filter(data_type=="int") %>%
filter(variable_short_name != "inf_Age") %>%
filter(variable_short_name != "inf_AgeDays") %>%
filter(variable_short_name != "inf_AgeWeeks") %>%
filter(usability!="EMPTY") %>%
pull(variable_short_name)
curr_int <- Q5y2B %>% select(all_of(int_fields)) %>%
mutate_if(is.character,as.numeric)
curr_Voc <- Voc %>% filter(Questionnaire=="F1_NutritionMotorDev_yearI_Version2")
# Looking at int fields
int_fields <- curr_Voc %>% filter(data_type=="int") %>%
filter(variable_short_name != "inf_Age") %>%
filter(variable_short_name != "inf_AgeDays") %>%
filter(variable_short_name != "inf_AgeWeeks") %>%
filter(usability!="EMPTY") %>%
pull(variable_short_name)
curr_int <- Q5y1 %>% select(all_of(int_fields)) %>%
mutate_if(is.character,as.numeric)
ggplot(gather(curr_int), aes(value)) +
geom_histogram() +
facet_wrap(~key, scales = 'free')
curr_Voc <- Voc %>% filter(Questionnaire=="F1_NutritionMotorDev_yearI_Version2")
# Looking at int fields
int_fields <- curr_Voc %>% filter(data_type=="int") %>%
filter(variable_short_name != "inf_Age") %>%
filter(variable_short_name != "inf_AgeDays") %>%
filter(variable_short_name != "inf_AgeWeeks") %>%
filter(usability!="EMPTY") %>%
pull(variable_short_name)
curr_int <- Q5y1 %>% select(all_of(int_fields)) %>%
mutate_if(is.character,as.numeric)
ggplot(gather(curr_int), aes(value)) +
geom_histogram() +
facet_wrap(~key, scales = 'free')
# checking type of data
type_check <-  curr_int %>%
dplyr::summarise_all(class) %>%
tidyr::gather(variable, class)
shiny::runApp('Documents/UA_POSTDOC/CURE/interface_CURE/CURE_interface/shiny_app')
runApp('Documents/UA_POSTDOC/CURE/interface_CURE/CURE_interface/shiny_app')
setwd("~/Documents/UA_POSTDOC/CURE/interface_CURE/CURE_interface/shiny_app")
runApp()
runApp()
runApp()
runApp()
runApp()
datasetJL <- read_csv("../datasets/JL_raw_2020.csv")
display_dataset <- datasetJL %>% group_by(article_id, available) %>% tally()
View(display_dataset)
display_dataset  %>%  ggplot(aes(x="", y=n, fill=available)) +
geom_bar(stat="identity", width=1, color="white") +
coord_polar("y", start=0) +
theme_void()
display_dataset <- datasetJL %>% group_by(available) %>% tally()
display_dataset  %>%  ggplot(aes(x="", y=n, fill=available)) +
geom_bar(stat="identity", width=1, color="white") +
coord_polar("y", start=0) +
theme_void()
runApp()
datasetJL %>%  filter(article_year>=input$DB_year[1] && article_year<=input$DB_year[2]) %>%
select(-article_id)
test <- datasetJL %>%  filter(article_year>=2010 && article_year<=2020) %>%
select(-article_id)
View(datasetJL)
datasetJL$article_year <- as.numeric(datasetJL$article_year)
test <- datasetJL %>%  filter(article_year>=2010 && article_year<=2020)
test <- datasetJL %>%  filter(article_year>=2010)
test <- datasetJL %>%  filter(article_year>=2010 & article_year<=2020)
runApp()
View(datasetJL)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
